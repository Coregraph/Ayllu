/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package servicios.generarInformeGrupo.secretario;

import BESA.ExceptionBESA;
import BESA.Kernel.Agent.Event.EventBESA;
import BESA.Kernel.Agent.GuardBESA;
import BESA.Kernel.System.Directory.AgHandlerBESA;
import co.edu.javeriana.ayllu.data.Ayllu_Data_Message;
import co.edu.javeriana.ayllu.data.Ayllu_EventTypes;
import java.util.logging.Level;
import java.util.logging.Logger;
import persistencia.Tema;
import servicios.generarInformeGrupo.DatosGenerarInformeGrupo;
import servicios.generarInformeGrupo.EstadoGenerarInformeGrupo;
import servicios.generarInformeGrupo.GuardaRecibirOAGeneracionInformesGrupo;
import servicios.generarInformeTema.DatosGenerarInformeTema;
import servicios.generarInformeTema.EstadoGenerarInformeTema;

/**
 *
 * @author AylluAdmin
 */
public class GuardaRecibirRespuestasGenerarInformesGrupo extends GuardBESA {

    @Override
    public void funcExecGuard(EventBESA ebesa) {
        try {
            System.out.println("En la guarda GuardaRecibirRespuestasGenerarInformesGrupo");
            DatosSecretarioGIG misDatos = ((EstadoSecretarioGIG) this.getAgent().getState()).getMisDatos();
            EstadoSecretarioGIG miEstado = (EstadoSecretarioGIG) this.getAgent().getState();
            AgHandlerBESA myHandler = this.getAgent().getAdmLocal().getHandlerByAid(this.getAgent().getAid());
            
            Ayllu_Data_Message theData = (Ayllu_Data_Message) ebesa.getData();

            //TODO Aca tambien se debe hacer todo lo relacionado con el awarenes

            //TODO Aca tambien se debe hacer todo lo relacionado con el awarenes
            
            AgHandlerBESA handlerCMA = miEstado.getCommunityManagerHandler();

            Tema tema = miEstado.getMisDatos().getTemaManejado();
            
            switch (theData.getEventType()) {

                case QUEST_REQUEST:

                    
                    manejarPeticion(tema);//Metodo que maneja la petici√≥n al IA

                    //Esto se hace para efectos de prueba del protcolo
                    String OAInformePrueba = "Informe OA tema "+tema;
                    manejarRespuesta(tema, OAInformePrueba, myHandler, handlerCMA);
                    //--------------------------------------------------------------

                    break;

                case QUEST_REPLY:

                    Object OAInforme = theData.getMessage();
                    manejarRespuesta(tema, OAInforme, myHandler, handlerCMA);  //Metodo que maneja la respuesta del IA

                    break;

            }
        } catch (ExceptionBESA ex) {
            Logger.getLogger(GuardaRecibirRespuestasGenerarInformesGrupo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void manejarPeticion(Tema tema) {
        System.out.println("Todos los estudaintes del tema " + tema + "cargaron sus respectivos OA");
        System.out.println("Por favor generar el resumen integrado de temas");
    }
    
    private void manejarRespuesta(Tema tema, Object OAresumenTema, AgHandlerBESA myHandler, AgHandlerBESA senderHandler) throws ExceptionBESA {
        DatosGenerarInformeGrupo datosGenerarInformeTema = new DatosGenerarInformeGrupo();
        datosGenerarInformeTema.getOAResumenPorTema().put(tema, OAresumenTema);
        EstadoGenerarInformeGrupo estadoGenerarInformeTema = new EstadoGenerarInformeGrupo(datosGenerarInformeTema);

        
        Ayllu_Data_Message data = new Ayllu_Data_Message(Ayllu_EventTypes.START_COOP, myHandler, estadoGenerarInformeTema);
        EventBESA event = new EventBESA(GuardaRecibirOAGeneracionInformesGrupo.class.getName(), data);
        senderHandler.sendEvent(event);
    }
}
